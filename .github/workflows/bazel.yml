name: CI

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest]
        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: "Cache the Build"
              uses: actions/cache@v3
              with:
                  if: ${{ runner.os == 'Linux' }}
                    path: ~/.cache/bazel
                  else:
                    path: /private/var/tmp/_bazel_${{USER}}
                key: bazel-output # N.B. Caches are not shared between OSs, so using the same key is fine

            - name: "Build the library"
              env:
                  BAZELISK_GITHUB_TOKEN: ${{ secrets.BAZELISK_GITHUB_TOKEN }}
              run: |
                  tools/bazelisk build --compilation_mode=fastbuild //...

    coverage:
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: "Cache"
              uses: actions/cache@v3
              with:
                path: ~/.cache/bazel
                key: bazel-output

            - name: "Report test coverage"
              run: |
                  tools/bazelisk coverage --combined_report=lcov --instrument_test_targets //...

            - name: "Submit report to Coveralls"
              uses: coverallsapp/github-action@1.1.3
              with:
                  github-token: ${{ secrets.github_token }}
                  path-to-lcov: ${{ github.workspace }}/bazel-out/_coverage/_coverage_report.dat

    lint:
        runs-on: ubuntu-latest
        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: "Cache lint tests"
              uses: actions/cache@v3
              with:
                path: ~/.cache/bazel
                key: bazel-output

            - name: "Check clang-format version"
              run: |
                  clang-format --version

            - name: "Check code formatting"
              env:
                  BAZELISK_GITHUB_TOKEN: ${{ secrets.BAZELISK_GITHUB_TOKEN }}
              run: |
                  tools/bazelisk test --compilation_mode=fastbuild --config lint //...

    test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest]
        steps:
            - name: "Checkout sources"
              uses: actions/checkout@v3
              with:
                  submodules: recursive

            - name: "Cache unit tests"
              uses: actions/cache@v3
              with:
                  if: ${{ runner.os == 'Linux' }}
                    path: ~/.cache/bazel
                  else:
                    path: /private/var/tmp/_bazel_${{USER}}
                key: bazel-output

            - name: "Check unit tests"
              env:
                  BAZELISK_GITHUB_TOKEN: ${{ secrets.BAZELISK_GITHUB_TOKEN }}
              run: |
                  tools/bazelisk test //...
